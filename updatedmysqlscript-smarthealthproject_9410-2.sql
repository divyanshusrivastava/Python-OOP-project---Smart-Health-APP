-- MySQL Script generated by MySQL Workbench
-- Wed Jul 27 17:33:41 2016
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema smarthealthdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `smarthealthdb` ;
CREATE SCHEMA IF NOT EXISTS `smarthealthdb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `smarthealthdb` ;

-- -----------------------------------------------------
-- Table `smarthealthdb`.`UserType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`UserType` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`UserType` (
  `UserTypeID` INT NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`UserTypeID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Moderator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Moderator` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Moderator` (
  `Username` VARCHAR(20) NOT NULL,
  `Phone` CHAR(12) NULL,
  PRIMARY KEY (`Username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Administrator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Administrator` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Administrator` (
  `Username` VARCHAR(20) NOT NULL,
  `Phone` CHAR(12) NULL,
  PRIMARY KEY (`Username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`EndUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`EndUser` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`EndUser` (
  `Username` VARCHAR(20) NOT NULL,
  `Karma` INT NOT NULL DEFAULT 0,
  `DateCreated` DATE NOT NULL,
  PRIMARY KEY (`Username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`User` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`User` (
  `Username` VARCHAR(20) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Email1` VARCHAR(128) NOT NULL,
  `Email2` VARCHAR(128) NOT NULL,
  `FirstName` VARCHAR(45) NULL,
  `LastName` VARCHAR(45) NULL,
  `AboutMe` TEXT NULL,
  `PhotoURL1` VARCHAR(255) NULL,
  `PhotoURL2` VARCHAR(255) NULL,
  `PhotoURL3` VARCHAR(255) NULL,
  `StreetNumber` VARCHAR(20) NULL,
  `StreetName` VARCHAR(60) NULL,
  `MajorMunicipality` VARCHAR(45) NULL,
  `GoverningDistrict` VARCHAR(45) NULL,
  `PostalArea` VARCHAR(45) NULL,
  `UserTypeID` INT NOT NULL,
  `Status` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`Username`),
  INDEX `fk_User_UserType_idx` (`UserTypeID` ASC),
  CONSTRAINT `fk_User_UserType`
    FOREIGN KEY (`UserTypeID`)
    REFERENCES `smarthealthdb`.`UserType` (`UserTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
 /* CONSTRAINT `fk_User_Moderator1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`Moderator` (`Username`)
	ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Administrator1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`Administrator` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_EndUser1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`EndUser` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)*/
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Qualification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Qualification` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Qualification` (
  `QualificationID` INT NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`QualificationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`ModeratorQualification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`ModeratorQualification` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`ModeratorQualification` (
  `QualificationID` INT NOT NULL,
  `Username` VARCHAR(20) NOT NULL,
  `WhenAdded` TIMESTAMP NOT NULL,
  INDEX `fk_ModeratorQualification_Qualification1_idx` (`QualificationID` ASC),
  INDEX `fk_ModeratorQualification_Moderator1_idx` (`Username` ASC),
  CONSTRAINT `fk_ModeratorQualification_Qualification1`
    FOREIGN KEY (`QualificationID`)
    REFERENCES `smarthealthdb`.`Qualification` (`QualificationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ModeratorQualification_Moderator1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`Moderator` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Friendship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Friendship` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Friendship` (
  `Requester_Username` VARCHAR(20) NOT NULL,
  `Requested_Username` VARCHAR(20) NOT NULL,
  `WhenRequested` TIMESTAMP NULL,
  `WhenWithdrawn` TIMESTAMP NULL,
  `WhenRejected` TIMESTAMP NULL,
  `WhenConfirmed` TIMESTAMP NULL,
  `WhenUnfriended` TIMESTAMP NULL,
  INDEX `fk_Friendship_User1_idx` (`Requester_Username` ASC),
  INDEX `fk_Friendship_User2_idx` (`Requested_Username` ASC),
  PRIMARY KEY (`Requester_Username`, `Requested_Username`),
  CONSTRAINT `fk_Friendship_User1`
    FOREIGN KEY (`Requester_Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Friendship_User2`
    FOREIGN KEY (`Requested_Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Property`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Property` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Property` (
  `PropertyID` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Description` TEXT NULL,
  PRIMARY KEY (`PropertyID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Datum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Datum` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Datum` (
  `DatumID` INT NOT NULL,
  `Username` VARCHAR(20) NOT NULL,
  `PropertyID` INT NOT NULL,
  `Value` TEXT NOT NULL,
  `WhenSaved` DATETIME NOT NULL,
  PRIMARY KEY (`DatumID`),
  INDEX `fk_Datum_User1_idx` (`Username` ASC),
  INDEX `fk_Datum_Property1_idx` (`PropertyID` ASC),
  CONSTRAINT `fk_Datum_User1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Datum_Property1`
    FOREIGN KEY (`PropertyID`)
    REFERENCES `smarthealthdb`.`Property` (`PropertyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Forum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Forum` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Forum` (
  `ForumID` INT NOT NULL,
  `Topic` VARCHAR(45) NULL,
  `URL` VARCHAR(255) NOT NULL,
  `Summary` TEXT NULL,
  `WhenCreated` DATETIME NOT NULL,
  `WhenClosed` DATETIME NULL,
  `CreatedByModerator_Username` VARCHAR(20) NOT NULL,
  `DeletedByModerator_Username` VARCHAR(20) NULL,
  PRIMARY KEY (`ForumID`),
  INDEX `fk_Forum_Moderator1_idx` (`CreatedByModerator_Username` ASC),
  INDEX `fk_Forum_Moderator2_idx` (`DeletedByModerator_Username` ASC),
  CONSTRAINT `fk_Forum_Moderator1`
    FOREIGN KEY (`CreatedByModerator_Username`)
    REFERENCES `smarthealthdb`.`Moderator` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Forum_Moderator2`
    FOREIGN KEY (`DeletedByModerator_Username`)
    REFERENCES `smarthealthdb`.`Moderator` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Post` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Post` (
  `Username` VARCHAR(20) NOT NULL,
  `TimeCreated` DATETIME NOT NULL,
  `ForumID` INT NOT NULL,
  `TextEntry` TEXT NULL,
  `PhotoLocation` VARCHAR(255) NULL,
  `LinkLocation` VARCHAR(255) NULL,
  `VideoLocation` VARCHAR(255) NULL,
  PRIMARY KEY (`Username`, `TimeCreated`),
  INDEX `fk_Post_Forum1_idx` (`ForumID` ASC),
  INDEX `fk_Post_User1_idx` (`Username` ASC),
  CONSTRAINT `fk_Post_Forum1`
    FOREIGN KEY (`ForumID`)
    REFERENCES `smarthealthdb`.`Forum` (`ForumID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_User1`
    FOREIGN KEY (`Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `smarthealthdb`.`Rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Rating` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Rating` (
  `Post_Username` VARCHAR(20) NOT NULL,
  `Post_TimeCreated` DATETIME NOT NULL,
  `Rater_Username` VARCHAR(20) NOT NULL,
  `Stars` INT NOT NULL,
  INDEX `fk_Rating_Post1_idx` (`Post_Username` ASC, `Post_TimeCreated` ASC),
  INDEX `fk_Rating_User1_idx` (`Rater_Username` ASC),
  PRIMARY KEY (`Post_Username`, `Post_TimeCreated`, `Rater_Username`),
  CONSTRAINT `fk_Rating_Post1`
    FOREIGN KEY (`Post_Username` , `Post_TimeCreated`)
    REFERENCES `smarthealthdb`.`Post` (`Username` , `TimeCreated`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rating_User1`
    FOREIGN KEY (`Rater_Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`Comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`Comment` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`Comment` (
  `Post_Username` VARCHAR(20) NOT NULL,
  `Post_TimeCreated` DATETIME NOT NULL,
  `Commenter_Username` VARCHAR(20) NOT NULL,
  `CommentTime` TIMESTAMP NOT NULL,
  `CommentText` TEXT NULL,
  `PhotoLocation` VARCHAR(45) NULL,
  `LinkLocation` VARCHAR(45) NULL,
  `VideoLocation` VARCHAR(45) NULL,
  INDEX `fk_Comment_Post1_idx` (`Post_Username` ASC, `Post_TimeCreated` ASC),
  INDEX `fk_Comment_User1_idx` (`Commenter_Username` ASC),
  PRIMARY KEY (`Post_Username`, `Post_TimeCreated`, `Commenter_Username`, `CommentTime`),
  CONSTRAINT `fk_Comment_Post1`
    FOREIGN KEY (`Post_Username` , `Post_TimeCreated`)
    REFERENCES `smarthealthdb`.`Post` (`Username` , `TimeCreated`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comment_User1`
    FOREIGN KEY (`Commenter_Username`)
    REFERENCES `smarthealthdb`.`User` (`Username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smarthealthdb`.`LoginAttempt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smarthealthdb`.`LoginAttempt` ;

CREATE TABLE IF NOT EXISTS `smarthealthdb`.`LoginAttempt` (
  `LoginAttemptId` INT NOT NULL AUTO_INCREMENT,
  `Username` CHAR(20) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `UserAgentString` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`LoginAttemptId`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
